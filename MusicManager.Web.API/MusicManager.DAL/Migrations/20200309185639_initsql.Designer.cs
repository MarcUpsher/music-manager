// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicManager.DAL;

namespace MusicManager.DAL.Migrations
{
    [DbContext(typeof(MusicManagerContext))]
    [Migration("20200309185639_initsql")]
    partial class initsql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicManager.DAL.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 9, 20, 56, 37, 996, DateTimeKind.Local).AddTicks(8149));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageRefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ImageRefId");

                    b.ToTable("Album");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            ArtistId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 7,
                            Name = "Internal Affairs",
                            ReleaseDate = new DateTime(2012, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Internal Affairs is the first studio album by Swedish classic rock/AOR band The Night Flight Orchestra, released on 18 June 2012 via Coroner Records."
                        },
                        new
                        {
                            AlbumId = 2,
                            ArtistId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 2,
                            Name = "Nebraska",
                            ReleaseDate = new DateTime(1982, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Nebraska is the sixth studio album by Bruce Springsteen, released on September 30, 1982, by Columbia Records."
                        },
                        new
                        {
                            AlbumId = 3,
                            ArtistId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 4,
                            Name = "In The Passing Light Of Day",
                            ReleaseDate = new DateTime(2017, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "In the Passing Light of Day is the tenth studio album by Swedish band Pain of Salvation and was released on 13 January 2017 by InsideOut."
                        },
                        new
                        {
                            AlbumId = 4,
                            ArtistId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 1,
                            Name = "Born To Run",
                            ReleaseDate = new DateTime(1975, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Born to Run is the third studio album by American singer-songwriter Bruce Springsteen."
                        });
                });

            modelBuilder.Entity("MusicManager.DAL.AlbumGenre", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 9, 20, 56, 38, 24, DateTimeKind.Local).AddTicks(8435));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.HasKey("AlbumId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenre");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            GenreId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 1,
                            GenreId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 2,
                            GenreId = 6,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 2,
                            GenreId = 7,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 3,
                            GenreId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 3,
                            GenreId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 3,
                            GenreId = 5,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AlbumId = 4,
                            GenreId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MusicManager.DAL.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 9, 20, 56, 37, 989, DateTimeKind.Local).AddTicks(3704));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageRefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("ArtistId");

                    b.HasIndex("ImageRefId");

                    b.ToTable("Artist");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 5,
                            Name = "The Night Flight Orchestra"
                        },
                        new
                        {
                            ArtistId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 6,
                            Name = "Pain Of Salvation"
                        },
                        new
                        {
                            ArtistId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 3,
                            Name = "Bruce Springsteen"
                        });
                });

            modelBuilder.Entity("MusicManager.DAL.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 9, 20, 56, 37, 976, DateTimeKind.Local).AddTicks(4611));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rock"
                        },
                        new
                        {
                            GenreId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Metal"
                        },
                        new
                        {
                            GenreId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pop"
                        },
                        new
                        {
                            GenreId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Symphonic"
                        },
                        new
                        {
                            GenreId = 5,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Progressive"
                        },
                        new
                        {
                            GenreId = 6,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Acoustic"
                        },
                        new
                        {
                            GenreId = 7,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Folk"
                        });
                });

            modelBuilder.Entity("MusicManager.DAL.ImageRef", b =>
                {
                    b.Property<int>("ImageRefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 9, 20, 56, 37, 957, DateTimeKind.Local).AddTicks(9902));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("URI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageRefId");

                    b.ToTable("ImageRef");

                    b.HasData(
                        new
                        {
                            ImageRefId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_Born_to_Run_(Front_Cover).jpg"
                        },
                        new
                        {
                            ImageRefId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_Bruce_Springsteen_-_Nebraska.jpg"
                        },
                        new
                        {
                            ImageRefId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_bruce-springsteen-260-260.jpg"
                        },
                        new
                        {
                            ImageRefId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_In_the_Passing_Light_of_Day_Cover.jpg"
                        },
                        new
                        {
                            ImageRefId = 5,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_NFO.jpg"
                        },
                        new
                        {
                            ImageRefId = 6,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_PainOfSalvation.jpg"
                        },
                        new
                        {
                            ImageRefId = 7,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309-NFO_Internal_Affairs.jpg"
                        });
                });

            modelBuilder.Entity("MusicManager.DAL.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 9, 20, 56, 38, 7, DateTimeKind.Local).AddTicks(1491));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("TrackId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Track");

                    b.HasData(
                        new
                        {
                            TrackId = 1,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 363,
                            Name = "Siberian Queen",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 2,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 337,
                            Name = "California Morning",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 3,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 237,
                            Name = "Glowing City Madness",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 4,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 402,
                            Name = "West Ruth Ave",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 5,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 501,
                            Name = "Transatlantic Blues",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 6,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 229,
                            Name = "Miami 5:02",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 7,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 298,
                            Name = "Internal Affairs",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 8,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 297,
                            Name = "1998",
                            Position = 8
                        },
                        new
                        {
                            TrackId = 9,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 267,
                            Name = "Stella Ain't No Dove",
                            Position = 9
                        },
                        new
                        {
                            TrackId = 10,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 281,
                            Name = "Montreal Midnight Supply",
                            Position = 10
                        },
                        new
                        {
                            TrackId = 11,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 248,
                            Name = "Green Hills of Glumslöv",
                            Position = 11
                        },
                        new
                        {
                            TrackId = 12,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 272,
                            Name = "Nebraska",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 13,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 240,
                            Name = "Atlantic City",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 14,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 248,
                            Name = "Mansion on the Hill",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 15,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 224,
                            Name = "Johnny 99",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 16,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 340,
                            Name = "Highway Patrolman",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 17,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 197,
                            Name = "State Trooper",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 18,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 191,
                            Name = "Used Cars",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 19,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 178,
                            Name = "Open All Night",
                            Position = 8
                        },
                        new
                        {
                            TrackId = 20,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 307,
                            Name = "My Father's Hous",
                            Position = 9
                        },
                        new
                        {
                            TrackId = 21,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 251,
                            Name = "Reason to Believe",
                            Position = 10
                        },
                        new
                        {
                            TrackId = 22,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 622,
                            Name = "On a Tuesday",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 23,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 293,
                            Name = "Tongue of God",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 24,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 287,
                            Name = "Meaningless",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 25,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 203,
                            Name = "Silent Gold",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 26,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 545,
                            Name = "Full Throttle Tribe",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 27,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 285,
                            Name = "Reasons",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 28,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 384,
                            Name = "Angels of Broken Things",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 29,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 393,
                            Name = "The Taming of a Beast",
                            Position = 8
                        },
                        new
                        {
                            TrackId = 30,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 303,
                            Name = "If This Is the End",
                            Position = 9
                        },
                        new
                        {
                            TrackId = 31,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 931,
                            Name = "The Passing Light of Day",
                            Position = 10
                        },
                        new
                        {
                            TrackId = 32,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 289,
                            Name = "Thunder Road",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 33,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 191,
                            Name = "Tenth Avenue Freeze-Out",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 34,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 180,
                            Name = "Night",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 35,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 330,
                            Name = "Backstreets",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 36,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 281,
                            Name = "Born to Run",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 37,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 280,
                            Name = "She's the One",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 38,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 191,
                            Name = "Meeting Across the River",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 39,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 554,
                            Name = "Jungleland",
                            Position = 8
                        });
                });

            modelBuilder.Entity("MusicManager.DAL.Album", b =>
                {
                    b.HasOne("MusicManager.DAL.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicManager.DAL.ImageRef", "ImageRef")
                        .WithMany("Albums")
                        .HasForeignKey("ImageRefId");
                });

            modelBuilder.Entity("MusicManager.DAL.AlbumGenre", b =>
                {
                    b.HasOne("MusicManager.DAL.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicManager.DAL.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicManager.DAL.Artist", b =>
                {
                    b.HasOne("MusicManager.DAL.ImageRef", "ImageRef")
                        .WithMany("Artists")
                        .HasForeignKey("ImageRefId");
                });

            modelBuilder.Entity("MusicManager.DAL.Track", b =>
                {
                    b.HasOne("MusicManager.DAL.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
