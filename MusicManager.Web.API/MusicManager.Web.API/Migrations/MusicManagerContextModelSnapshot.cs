// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicManager.Web.API.Database.Contexts;

namespace MusicManager.Web.API.Migrations
{
    [DbContext(typeof(MusicManagerContext))]
    partial class MusicManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 15, 17, 23, 8, 46, DateTimeKind.Local).AddTicks(8595));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageRefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ImageRefId");

                    b.ToTable("Album");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            ArtistId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 7,
                            Name = "Internal Affairs",
                            ReleaseDate = new DateTime(2012, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Internal Affairs is the first studio album by Swedish classic rock/AOR band The Night Flight Orchestra, released on 18 June 2012 via Coroner Records."
                        },
                        new
                        {
                            AlbumId = 2,
                            ArtistId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 2,
                            Name = "Nebraska",
                            ReleaseDate = new DateTime(1982, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Nebraska is the sixth studio album by Bruce Springsteen, released on September 30, 1982, by Columbia Records."
                        },
                        new
                        {
                            AlbumId = 3,
                            ArtistId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 4,
                            Name = "In The Passing Light Of Day",
                            ReleaseDate = new DateTime(2017, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "In the Passing Light of Day is the tenth studio album by Swedish band Pain of Salvation and was released on 13 January 2017 by InsideOut."
                        },
                        new
                        {
                            AlbumId = 4,
                            ArtistId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 1,
                            Name = "Born To Run",
                            ReleaseDate = new DateTime(1975, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "Born to Run is the third studio album by American singer-songwriter Bruce Springsteen."
                        });
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.AlbumGenre", b =>
                {
                    b.Property<int>("AlbumGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 15, 17, 23, 8, 64, DateTimeKind.Local).AddTicks(8163));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("AlbumGenreId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenre");

                    b.HasData(
                        new
                        {
                            AlbumGenreId = 1,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 1
                        },
                        new
                        {
                            AlbumGenreId = 2,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 3
                        },
                        new
                        {
                            AlbumGenreId = 3,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 6
                        },
                        new
                        {
                            AlbumGenreId = 4,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 7
                        },
                        new
                        {
                            AlbumGenreId = 5,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 1
                        },
                        new
                        {
                            AlbumGenreId = 6,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 2
                        },
                        new
                        {
                            AlbumGenreId = 7,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 5
                        },
                        new
                        {
                            AlbumGenreId = 8,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 1
                        });
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 15, 17, 23, 8, 37, DateTimeKind.Local).AddTicks(8743));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageRefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ArtistId");

                    b.HasIndex("ImageRefId");

                    b.ToTable("Artist");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 5,
                            Name = "The Night Flight Orchestra",
                            Summary = "The Night Flight Orchestra is a Swedish hard rock band from Helsingborg. They are signed to Nuclear Blast Records. Formed in 2007 by Björn Strid and David Andersson while they were touring in the US with their band Soilwork, they were later joined by bassist Sharlee D'Angelo (Arch Enemy, Spiritual Beggars, ex-King Diamond), Richard Larsson (Von Benzo), Jonas Källsbäck (Mean Streak) and, more recently, Sebastian Forslund (Kadwatha). They have released six studio albums."
                        },
                        new
                        {
                            ArtistId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 6,
                            Name = "Pain Of Salvation",
                            Summary = "Pain of Salvation is a Swedish progressive metal band led by Daniel Gildenlöw, who is the band's main songwriter, lyricist, guitarist, and vocalist. Pain of Salvation's sound is characterised by riff-oriented guitar work, a broad vocal range, oscillation between heavy and calm passages, complex vocal harmonies and the structures of their albums, syncopation, and polyrhythms. Thus far, every album released by the band has been a concept album. Lyrically, the band tends to address contemporary issues, such as sexuality, war, the environment, and the nature of God, humanity, and existence."
                        },
                        new
                        {
                            ArtistId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageRefId = 3,
                            Name = "Bruce Springsteen",
                            Summary = "Bruce Springsteen, born September 23, 1949, is an American singer, songwriter, and musician who is both a solo artist and the leader of the E Street Band. He received critical acclaim for his early 1970s albums and attained worldwide fame upon the release of Born to Run in 1975. During a career that has spanned five decades, Springsteen has become known for his poetic and socially conscious lyrics and lengthy, energetic stage performances, earning the nickname \"The Boss\". He has recorded both rock albums and folk-oriented works, and his lyrics often address the experiences and struggles of working-class Americans."
                        });
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 15, 17, 23, 8, 23, DateTimeKind.Local).AddTicks(6480));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rock"
                        },
                        new
                        {
                            GenreId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Metal"
                        },
                        new
                        {
                            GenreId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pop"
                        },
                        new
                        {
                            GenreId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Symphonic"
                        },
                        new
                        {
                            GenreId = 5,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Progressive"
                        },
                        new
                        {
                            GenreId = 6,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Acoustic"
                        },
                        new
                        {
                            GenreId = 7,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Folk"
                        });
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.ImageRef", b =>
                {
                    b.Property<int>("ImageRefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 15, 17, 23, 8, 2, DateTimeKind.Local).AddTicks(7019));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("URI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageRefId");

                    b.ToTable("ImageRef");

                    b.HasData(
                        new
                        {
                            ImageRefId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_Born_to_Run_(Front_Cover).jpg"
                        },
                        new
                        {
                            ImageRefId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_Bruce_Springsteen_-_Nebraska.jpg"
                        },
                        new
                        {
                            ImageRefId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_bruce-springsteen-260-260.jpg"
                        },
                        new
                        {
                            ImageRefId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_In_the_Passing_Light_of_Day_Cover.jpg"
                        },
                        new
                        {
                            ImageRefId = 5,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_NFO.jpg"
                        },
                        new
                        {
                            ImageRefId = 6,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309_PainOfSalvation.jpg"
                        },
                        new
                        {
                            ImageRefId = 7,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            URI = "images/20200309-NFO_Internal_Affairs.jpg"
                        });
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 3, 15, 17, 23, 8, 57, DateTimeKind.Local).AddTicks(1945));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("TrackId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Track");

                    b.HasData(
                        new
                        {
                            TrackId = 1,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 363,
                            Name = "Siberian Queen",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 2,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 337,
                            Name = "California Morning",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 3,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 237,
                            Name = "Glowing City Madness",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 4,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 402,
                            Name = "West Ruth Ave",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 5,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 501,
                            Name = "Transatlantic Blues",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 6,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 229,
                            Name = "Miami 5:02",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 7,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 298,
                            Name = "Internal Affairs",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 8,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 297,
                            Name = "1998",
                            Position = 8
                        },
                        new
                        {
                            TrackId = 9,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 267,
                            Name = "Stella Ain't No Dove",
                            Position = 9
                        },
                        new
                        {
                            TrackId = 10,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 281,
                            Name = "Montreal Midnight Supply",
                            Position = 10
                        },
                        new
                        {
                            TrackId = 11,
                            AlbumId = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 248,
                            Name = "Green Hills of Glumslöv",
                            Position = 11
                        },
                        new
                        {
                            TrackId = 12,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 272,
                            Name = "Nebraska",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 13,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 240,
                            Name = "Atlantic City",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 14,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 248,
                            Name = "Mansion on the Hill",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 15,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 224,
                            Name = "Johnny 99",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 16,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 340,
                            Name = "Highway Patrolman",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 17,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 197,
                            Name = "State Trooper",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 18,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 191,
                            Name = "Used Cars",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 19,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 178,
                            Name = "Open All Night",
                            Position = 8
                        },
                        new
                        {
                            TrackId = 20,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 307,
                            Name = "My Father's Hous",
                            Position = 9
                        },
                        new
                        {
                            TrackId = 21,
                            AlbumId = 2,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 251,
                            Name = "Reason to Believe",
                            Position = 10
                        },
                        new
                        {
                            TrackId = 22,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 622,
                            Name = "On a Tuesday",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 23,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 293,
                            Name = "Tongue of God",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 24,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 287,
                            Name = "Meaningless",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 25,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 203,
                            Name = "Silent Gold",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 26,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 545,
                            Name = "Full Throttle Tribe",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 27,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 285,
                            Name = "Reasons",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 28,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 384,
                            Name = "Angels of Broken Things",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 29,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 393,
                            Name = "The Taming of a Beast",
                            Position = 8
                        },
                        new
                        {
                            TrackId = 30,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 303,
                            Name = "If This Is the End",
                            Position = 9
                        },
                        new
                        {
                            TrackId = 31,
                            AlbumId = 3,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 931,
                            Name = "The Passing Light of Day",
                            Position = 10
                        },
                        new
                        {
                            TrackId = 32,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 289,
                            Name = "Thunder Road",
                            Position = 1
                        },
                        new
                        {
                            TrackId = 33,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 191,
                            Name = "Tenth Avenue Freeze-Out",
                            Position = 2
                        },
                        new
                        {
                            TrackId = 34,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 180,
                            Name = "Night",
                            Position = 3
                        },
                        new
                        {
                            TrackId = 35,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 330,
                            Name = "Backstreets",
                            Position = 4
                        },
                        new
                        {
                            TrackId = 36,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 281,
                            Name = "Born to Run",
                            Position = 5
                        },
                        new
                        {
                            TrackId = 37,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 280,
                            Name = "She's the One",
                            Position = 6
                        },
                        new
                        {
                            TrackId = 38,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 191,
                            Name = "Meeting Across the River",
                            Position = 7
                        },
                        new
                        {
                            TrackId = 39,
                            AlbumId = 4,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 554,
                            Name = "Jungleland",
                            Position = 8
                        });
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Album", b =>
                {
                    b.HasOne("MusicManager.Web.API.Domain.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicManager.Web.API.Domain.Models.ImageRef", "ImageRef")
                        .WithMany("Albums")
                        .HasForeignKey("ImageRefId");
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.AlbumGenre", b =>
                {
                    b.HasOne("MusicManager.Web.API.Domain.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicManager.Web.API.Domain.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Artist", b =>
                {
                    b.HasOne("MusicManager.Web.API.Domain.Models.ImageRef", "ImageRef")
                        .WithMany("Artists")
                        .HasForeignKey("ImageRefId");
                });

            modelBuilder.Entity("MusicManager.Web.API.Domain.Models.Track", b =>
                {
                    b.HasOne("MusicManager.Web.API.Domain.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
